import java.util.*;

class Solution {
    public int minGroupsForValidAssignment(int[] nums) {
        Map<Integer, Integer> frequencyMap = new HashMap<>();
        List<Integer> frequencies = new ArrayList<>();

        for (int num : nums) {
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
        }

        for (int freq : frequencyMap.values()) {
            frequencies.add(freq);
        }

        Collections.sort(frequencies);

        int ans = Integer.MAX_VALUE;

        for (int gr = 1; gr <= frequencies.get(frequencies.size() - 1); gr++) {
            int a = gr, b = gr + 1;
            int num = 0;
            boolean bad = false;

            for (int i = 0; i < frequencies.size(); i++) {
                int cur = frequencies.get(i);
                int mn = Integer.MAX_VALUE;
                int cnt = 0;

                while (cur >= 0) {
                    if (cur % a == 0) {
                        mn = cnt + cur / a;
                    }
                    cur -= b;
                    cnt++;
                }

                if (mn == Integer.MAX_VALUE) {
                    bad = true;
                    break;
                }

                num += mn;
            }

            if (!bad) {
                ans = Math.min(ans, num);
            }
        }

        return ans;
    }
}
